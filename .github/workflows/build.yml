name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        pip install -r requirements.txt
    - name: Test with coverage + unittest
      run: |
        coverage run --source=pyecma376_2 --branch -m unittest
    - name: Report test coverage
      if: ${{ always() }}
      run: |
        coverage report -m

  static-analysis:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pycodestyle mypy
        pip install -r requirements.txt
    - name: Check typing with MyPy
      run: |
        mypy pyecma376_2 test
    - name: Check code style with PyCodestyle
      run: |
        python -m pycodestyle --count --max-line-length 120 pyecma376_2 test

  package:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build
    - name: Create source and wheel dist
      run: |
        python -m build
    - uses: actions/upload-artifact@v3
      with:
        name: package distribution
        path: dist/
